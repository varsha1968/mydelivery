package com.example.potherpanchalidelivery;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.webkit.WebView;
import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.core.app.ActivityCompat;
import androidx.fragment.app.FragmentActivity;

import android.Manifest;
import android.content.pm.PackageManager;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Build;
import android.os.Bundle;
import android.widget.EditText;
import android.widget.Toast;

import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.maps.CameraUpdate;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import com.google.firebase.database.core.view.View;

import java.lang.reflect.Array;
import java.util.Arrays;

public class MainActivity extends AppCompatActivity {

    WebView webView;
    private String webUrl="http://192.168.43.241//delivery-master/deliveryboy";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        webView = (WebView) findViewById(R.id.myWebView);
        webView.loadUrl(webUrl);

    }}

class mylocation  extends FragmentActivity implements OnMapReadyCallback,
    GoogleApiClient.ConnectionCallbacks{
   // GoogleApiClient.onConnectionFailedListener,
   // com.google.android.gms.location.LocationListener{

    private GoogleMap mMap;
    private DatabaseReference databaseReeference;
    private LocationListener locationlistner;
    private LocationManager locationmanager;
    private Location location;
    private LocationRequest locationrequest;
    private final long Min_Time = 1000;
    private final long Min_Dist = 5;

    private EditText editTextLatitude;
    private EditText editTextLongitude;
    //private Object LocationManager;

    //private final view;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_mylocation);
        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);
        mapFragment.getMapAsync(this);
        ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, PackageManager.PERMISSION_GRANTED);
        editTextLatitude = findViewById(R.id.editText);
        editTextLongitude = findViewById(R.id.editText);

        databaseReeference = FirebaseDatabase.getInstance().getReference("location");
        databaseReeference.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                try {
                    String databaseLatitudeString=dataSnapshot.child("Latitude").getValue().toString().substring(1,dataSnapshot.child("latitude").getValue().toString().length()-1);
                    String databaseLongitudeString=dataSnapshot.child("Longitude").getValue().toString().substring(1,dataSnapshot.child("longitude").getValue().toString().length()-1);
                    String[] stringLat=databaseLatitudeString.split(",");
                    Arrays.sort(stringLat);
                    String Latitude=stringLat[stringLat.length-1].split(",")[1];
                    String[] stringLong=databaseLongitudeString.split(",");
                    Arrays.sort(stringLong);
                    String Longitude=stringLong[stringLong.length-1].split(",")[1];
                    LatLng latLng=new LatLng(Double.parseDouble(Latitude),Double.parseDouble(Longitude));
                    mMap.addMarker(new MarkerOptions().position(latLng).title(Latitude + "," + Longitude));
                    mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));


                }
                catch(Exception e){
                    e.printStackTrace();

                }

            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

    }


    /**
     * Manipulates the map once available.
     * This callback is triggered when the map is ready to be used.
     * This is where we can add markers or lines, add listeners or move the camera. In this case,
     * we just add a marker near Sydney, Australia.
     * If Google Play services is not installed on the device, the user will be prompted to install
     * it inside the SupportMapFragment. This method will only be triggered once the user has
     * installed Google Play services and returned to the app.
     */
    @RequiresApi(api = Build.VERSION_CODES.M)
    @Override
    public void onMapReady(GoogleMap googleMap) {
        mMap = googleMap;

        //Add a marker in Sydney and move the camera
//       LatLng sydney = new LatLng(-34, 151);
//       mMap.addMarker(new MarkerOptions().position(sydney).title("Marker in Sydney"));
//       mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));
        locationlistner = new LocationListener() {
            @Override
            public void onLocationChanged(Location location) {
                String msg="updated location: " +
                    Double.toString(location.getLatitude()) + ","+
                    Double.toString(location.getLongitude());
                //Toast.makeText(this,msg,Toast.LENGTH_SHORT).show();
                latLng= new latLng


            }

            @Override
            public void onStatusChanged(String provider, int status, Bundle extras) {

            }

            @Override
            public void onProviderEnabled(String provider) {

            }

            @Override
            public void onProviderDisabled(String provider) {

            }
        };
        locationmanager = (LocationManager) getSystemService(LOCATION_SERVICE);
        if (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            // TODO: Consider calling
            //    Activity#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for Activity#requestPermissions for more details.
            return;
        }
        locationmanager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, Min_Time, Min_Dist, locationlistner);
        locationmanager.requestLocationUpdates(LocationManager.GPS_PROVIDER,Min_Time,Min_Dist,locationlistner);






    }
    public void updatebuttononclick(View view){
        databaseReeference.child("latitude").push().setValue(editTextLatitude.getText().toString());
        databaseReeference.child("longitude").push().setValue(editTextLongitude.getText().toString());



    }

    @Override
    public void onConnected(@Nullable Bundle bundle) {

    }

    @Override
    public void onConnectionSuspended(int i) {

    }
}

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        